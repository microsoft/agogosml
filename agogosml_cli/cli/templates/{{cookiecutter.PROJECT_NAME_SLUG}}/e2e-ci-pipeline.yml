resources:
- repo: self

variables:
- group: azure-subscription-1
- name: tag
  value: 'latest'
- name: app_tag
  value: 'latest'
- name: messaging_type
  value: 'kafka'
- name: eventhub_kafka_connection_string
  value: # TODO: THIS NEEDS TO BE TEMPLATIZED
- name: kafka_address
  value: 
- name: kafka_consumer_group
  value: '$Default'
- name: kafka_timeout
  value: '30'
- name: kafka_topic_input
  value: 'in'
- name: kafka_topic_output
  value: 'out'
- name: project_name
  value: '{{cookiecutter.PROJECT_NAME_SLUG}}'

trigger:
  branches:
    include:
    - master

jobs:
- job: Phase_1
  displayName: 'Run End 2 End Tests'
  condition: succeeded()

  steps:
  - task: DockerCompose@0
    displayName: 'Run docker compose and test generator'
    inputs:
      azureSubscription: $(azure_subscription)
      azureContainerRegistry: $(container_registry)
      dockerComposeFile: '**/$(project_name)/e2e/docker-compose-agogosml.yml'
      additionalDockerComposeFiles: 'docker-compose-testgen.yml'
      dockerComposeFileArgs: |
       CONTAINER_REG=$(container_registry)
       EVENTHUB_KAFKA_CONNECTION_STRING=$(eventhub_kafka_connection_string)
       KAFKA_ADDRESS=$(kafka_address)
       KAFKA_CONSUMER_GROUP=$(kafka_consumer_group)
       KAFKA_TIMEOUT=$(kafka_timeout)
       KAFKA_TOPIC_INPUT=$(kafka_topic_input)
       KAFKA_TOPIC_OUTPUT=$(kafka_topic_output)
       MESSAGING_TYPE=$(messaging_type)
       TAG=$(tag)
       APP_TAG=$(app_tag)
       SCHEMA_FILEPATH=$(schema_filepath)
       MODEL_PATH=$(model_path)
       CONTAINER_REG_AGOGOSML=$(container_registry)/
      dockerComposeCommand: 'up --exit-code-from tester-gen'
      requireAdditionalDockerComposeFiles: true
