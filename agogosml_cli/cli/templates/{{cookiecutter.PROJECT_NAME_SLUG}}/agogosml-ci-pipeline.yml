resources:
- repo: self

variables:
- group: azure-subscription-1
- name: project_name
  value: '{{cookiecutter.PROJECT_NAME_SLUG}}'

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - '**$(project_name)/agogosml'
    - '**$(project_name)/input_reader'
    - '**$(project_name)/output_writer'

jobs:
- job: Phase_1
  displayName: Agogosml-Build-CI
  condition: succeeded()

  steps:
  - bash: |
      if [ -z "$(azure_subscription)" ]; then
        echo "azure_subscription not set in variables - exiting"
        exit 1
      else
        echo "using azure_subscription - $(azure_subscription)"
      fi

    displayName: 'verify YAML variable set for azure_subscription'

  - task: Docker@1
    displayName: 'Build an image'
    inputs:
      azureSubscriptionEndpoint: $(azure_subscription)
      azureContainerRegistry: $(container_registry)
      dockerFile: '**$(project_name)/agogosml/Dockerfile.agogosml'
      imageName: 'agogosml:$(Build.BuildId)'

  - bash: |  
      echo "Since this is a merge build, we are creating a new 'latest' tag"
      docker tag $(container_registry)/agogosml:$(Build.BuildId) $(container_registry)/agogosml:latest

    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: 'Tag as "latest" tag'

  - task: Docker@1
    displayName: 'Push base image'
    inputs:
      azureSubscriptionEndpoint: $(azure_subscription)
      azureContainerRegistry: $(container_registry)
      command: 'Push an image'
      imageName: agogosml


- job: Phase_2
  displayName: InputReader-Build-CI
  dependsOn: Phase_1
  condition: succeeded()

  steps:
  - task: Docker@1
    displayName: 'Build an image'
    inputs:
      azureSubscriptionEndpoint: $(azure_subscription)
      azureContainerRegistry: $(container_registry)
      dockerFile: '**$(project_name)/input_reader/Dockerfile.input_reader'
      arguments: '--build-arg CONTAINER_REG=$(container_registry)/ --build-arg AGOGOSML_TAG=$(Build.BuildId)'
      imageName: 'input_reader:$(Build.BuildId)'

  - bash: |
      echo "Since this is a merge build, we are creating a new 'latest' tag"
      docker tag $(container_registry)/input_reader:$(Build.BuildId) $(container_registry)/input_reader:latest

    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: 'Tag as "latest" tag'

  - task: Docker@1
    displayName: 'Push input reader app image'
    inputs:
      azureSubscriptionEndpoint: $(azure_subscription)
      azureContainerRegistry: $(container_registry)
      command: 'Push an image'
      imageName: 'input_reader'


- job: Phase_3
  displayName: OutputWriter-Build-CI
  dependsOn: Phase_1
  condition: succeeded()

  steps:
  - task: Docker@1
    displayName: 'Build an image'
    inputs:
      azureSubscriptionEndpoint: $(azure_subscription)
      azureContainerRegistry: $(container_registry)
      dockerFile: '**$(project_name)/output_writer/Dockerfile.output_writer'
      arguments: '--build-arg CONTAINER_REG=$(container_registry)/ --build-arg AGOGOSML_TAG=$(Build.BuildId)'
      imageName: 'output_writer:$(Build.BuildId)'

  - bash: |
      echo "Since this is a merge build, we are creating a new 'latest' tag"
      docker tag $(container_registry)/output_writer:$(Build.BuildId) $(container_registry)/output_writer:latest

    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: 'Tag as "latest" tag'

  - task: Docker@1
    displayName: 'Push output writer app image'
    inputs:
      azureSubscriptionEndpoint: $(azure_subscription)
      azureContainerRegistry: $(container_registry)
      command: 'Push an image'
      imageName: 'output_writer'
