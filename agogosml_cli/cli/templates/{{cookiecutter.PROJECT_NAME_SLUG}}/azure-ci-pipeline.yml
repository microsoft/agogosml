resources:
- repo: self

variables:
  container_registry: '{{cookiecutter.AZURE_CONTAINER_REGISTRY}}/'

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - '**/agogosml'
    - '**/input_reader'
    - '**/output_writer'

jobs:
- job: Phase_1
  displayName: Agogosml-Build-CI
  condition: succeeded()
  pool:
    vmImage: 'Ubuntu 16.04'

  steps:
  - task: Docker@1
    displayName: 'Build an image'
    inputs:
      azureSubscriptionEndpoint: '{{cookiecutter.SUBSCRIPTION_ID}}'
      azureContainerRegistry: {{cookiecutter.AZURE_CONTAINER_REGISTRY}}
      dockerFile: '**/agogosml/Dockerfile.agogosml'
      imageName: 'agogosml:$(Build.BuildId)'

  - bash: |  
       if [ $(Build.SourceBranchName) = "master" ]; then
         echo "Since this is a merge build, we are creating a new 'latest' tag"
         docker tag $(container_registry)agogosml:$(Build.BuildId) $(container_registry)agogosml:latest
         echo "Done"
       else
         echo "Not a merge build, hence skipping 'latest' tag"
       fi

    displayName: 'Tag latest tag'

  - task: Docker@1
    displayName: 'Push base image'
    inputs:
      azureSubscriptionEndpoint: '{{cookiecutter.SUBSCRIPTION_ID}}'
      azureContainerRegistry: {{cookiecutter.AZURE_CONTAINER_REGISTRY}}
      command: 'Push an image'
      imageName: agogosml


- job: Phase_2
  displayName: InputReader-Build-CI
  dependsOn: Phase_1
  condition: succeeded()
  pool:
    vmImage: 'Ubuntu 16.04'

  steps:
  - task: Docker@1
    displayName: 'Build an image'
    inputs:
      azureSubscriptionEndpoint: '{{cookiecutter.SUBSCRIPTION_ID}}'
      azureContainerRegistry: {{cookiecutter.AZURE_CONTAINER_REGISTRY}}
      dockerFile: '**/input_reader/Dockerfile.input_reader'
      arguments: '--build-arg CONTAINER_REG=$(container_registry) --build-arg AGOGOSML_TAG=$(Build.BuildId)'
      useDefaultContext: false
      imageName: 'input_reader:$(Build.BuildId)'

  - bash: |  
       if [ $(Build.SourceBranchName) = "master" ]; then
         echo "Since this is a merge build, we are creating a new 'latest' tag"
         docker tag $(container_registry)input_reader:$(Build.BuildId) $(container_registry)input_reader:latest
         echo "Done"
       else
         echo "Not a merge build, hence skipping 'latest' tag"
       fi

    displayName: 'Tag latest tag'

  - task: Docker@1
    displayName: 'Push input reader app image'
    inputs:
      azureSubscriptionEndpoint: '{{cookiecutter.SUBSCRIPTION_ID}}'
      azureContainerRegistry: {{cookiecutter.AZURE_CONTAINER_REGISTRY}}
      command: 'Push an image'
      imageName: 'input_reader'


- job: Phase_3
  displayName: OutputWriter-Build-CI
  dependsOn: Phase_1
  condition: succeeded()
  pool:
    vmImage: 'Ubuntu 16.04'

  steps:
  - task: Docker@1
    displayName: 'Build an image'
    inputs:
      azureSubscriptionEndpoint: '{{cookiecutter.SUBSCRIPTION_ID}}'
      azureContainerRegistry: {{cookiecutter.AZURE_CONTAINER_REGISTRY}}
      dockerFile: '**/output_writer/Dockerfile.output_writer'
      arguments: '--build-arg CONTAINER_REG=$(container_registry) --build-arg AGOGOSML_TAG=$(Build.BuildId)'
      useDefaultContext: false
      imageName: 'output_writer:$(Build.BuildId)'

  - bash: |  
       if [ $(Build.SourceBranchName) = "master" ]; then
         echo "Since this is a merge build, we are creating a new 'latest' tag"
         docker tag $(container_registry)output_writer:$(Build.BuildId) $(container_registry)output_writer:latest
         echo "Done"
       else
         echo "Not a merge build, hence skipping 'latest' tag"
       fi
       
    displayName: 'Tag latest tag'

  - task: Docker@1
    displayName: 'Push output writer app image'
    inputs:
      azureSubscriptionEndpoint: '{{cookiecutter.SUBSCRIPTION_ID}}'
      azureContainerRegistry: {{cookiecutter.AZURE_CONTAINER_REGISTRY}}
      command: 'Push an image'
      imageName: 'output_writer'

- job: Phase_4
  dependsOn: Phase_1
  steps:
  - task: PublishTestResults@2
    displayName: 'Publish TRX / Test Results'
    inputs:
      testResultsFiles: '**/TEST-*.xml'